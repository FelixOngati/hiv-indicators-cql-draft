{
    "resourceType": "Library",
    "id": "TXPVLS",
    "meta": {
      "versionId": "1",
      "lastUpdated": "2021-01-12T20:05:12.000+00:00",
      "source": "#cWRSEKcBwloBk0tz",
      "profile": [ "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/computable-library-cqfm" ]
    },
    "language": "en",
    "text": {
      "status": "generated",
      "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"></div>"
    },
    "url": "http://ecqi.healthit.gov/ecqms/Library/TXPVLS",
    "version": "1.0.",
    "name": "TXPVLS",
    "status": "active",
    "experimental": true,
    "type": {
      "coding": [ {
        "system": "http://terminology.hl7.org/CodeSystem/library-type",
        "code": "logic-library"
      } ]
    },
    "date": "2021-01-12T20:05:11+00:00",
    "publisher": "National Committee for Quality Assurance",
    "description": "",
    "relatedArtifact": [ {
      "type": "depends-on",
      "url": "http://loinc.org"
    }, {
      "type": "depends-on",
      "url": "http://snomed.info/sct"
    } ],
    "dataRequirement": [],
    "content": [ {
      "contentType": "text/cql",
      "data": "bGlicmFyeSBUWFBWTFMgdmVyc2lvbiAnMS4wLjEnCgp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJyBjYWxsZWQgRkhJUkhlbHBlcnMKCi8vIFNOT01FRC1DVCwgSW50ZXJuYXRpb25hbCBFZGl0aW9uCmNvZGVzeXN0ZW0gIlNOT01FRC1DVCI6ICdodHRwOi8vc25vbWVkLmluZm8vc2N0JyB2ZXJzaW9uICdodHRwOi8vc25vbWVkLmluZm8vc2N0LzkwMDAwMDAwMDAwMDIwNzAwOCcKCi8vIExPSU5DLCAyLjYzKwpjb2Rlc3lzdGVtICJMT0lOQyI6ICdodHRwOi8vbG9pbmMub3JnJwoKY29kZXN5c3RlbSAiSVNPLTg2MDEtRGVyaXZlZCBQZXJpb2RzIjogJ2h0dHA6Ly9vaGllLm9yZy9WYWx1ZVNldC9pc28tODYwMS1kZXJpdmVkLXBlcmlvZHMnCgovLyBIaXN0b3J5IG9mIEFSVCBUaGVyYXB5CmNvZGUgIkFscmVhZHkgb24gQVJUIGFuZCBOZXcgb24gQVJUIjogJzcxMzU0MDAwNCcgZnJvbSAiU05PTUVELUNUIiBkaXNwbGF5ICdBbHJlYWR5IG9uIEFSVCBhbmQgTmV3IG9uIEFSVCcKCmNvZGUgIkhJViBQb3NpdGl2ZSI6ICcxNjU4MTYwMDUnIGZyb20gIlNOT01FRC1DVCIgZGlzcGxheSAnSElWIFBvc2l0aXZlJwoKY29kZSAiSElWIDEgYW5kIDIgdGVzdHMgLSBNZWFuaW5nZnVsIFVzZSBzZXQiOiAnNzU2MjItMScgZnJvbSAiTE9JTkMiIGRpc3BsYXkgJ0hJViAxIGFuZCAyIHRlc3RzIC0gTWVhbmluZ2Z1bCBVc2Ugc2V0JwoKdmFsdWVzZXQgIkh1bWFuIEltbXVub2RlZmljaWVuY3kgVmlydXMgKEhJVikgTGFib3JhdG9yeSBUZXN0IENvZGVzIChBYiBhbmQgQWcpIjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM3NjIuMS40LjEwNTYuNTAnCgpjb2Rlc3lzdGVtICJDSUVMIjogJ2h0dHBzOi8vb3BlbmNvbmNlcHRsYWIub3JnL29yZ3MvQ0lFTC9zb3VyY2VzL0NJRUwnCgpjb2RlICJWaXJhbCBMb2FkIFF1YW50aXRhdGl2ZSI6ICc4NTYnIGZyb20gIkNJRUwiIGRpc3BsYXkgJ0hJViB2aXJhbCBsb2FkJwoKY29kZSAiVmlyYWwgTG9hZCBRdWFsaXRhdGl2ZSI6ICcxMzA1JyBmcm9tICJDSUVMIiBkaXNwbGF5ICdISVYgVklSQUwgTE9BRCwgUVVBTElUQVRJVkUnCgovLyBBZ2UgR3JvdXBzCmNvZGUgIlAwWS0tUDFZIjogJ1AwWS0tUDFZJyBmcm9tICJJU08tODYwMS1EZXJpdmVkIFBlcmlvZHMiIGRpc3BsYXkgJzwgMSB5ZWFyJwpjb2RlICJQMVktLVA1WSI6ICdQMVktLVA1WScgZnJvbSAiSVNPLTg2MDEtRGVyaXZlZCBQZXJpb2RzIiBkaXNwbGF5ICcxLTQgeWVhcnMnCmNvZGUgIlA1WS0tUDEwWSI6ICdQNVktLVAxMFknIGZyb20gIklTTy04NjAxLURlcml2ZWQgUGVyaW9kcyIgZGlzcGxheSAnNS05IHllYXInCmNvZGUgIlAxMFktLVAxNVkiOiAnUDEwWS0tUDE1WScgZnJvbSAiSVNPLTg2MDEtRGVyaXZlZCBQZXJpb2RzIiBkaXNwbGF5ICcxMC0xNCB5ZWFyJwpjb2RlICJQMTVZLS1QMjBZIjogJ1AxNVktLVAyMFknIGZyb20gIklTTy04NjAxLURlcml2ZWQgUGVyaW9kcyIgZGlzcGxheSAnMTUtMTkgeWVhcicKY29kZSAiUDIwWS0tUDI1WSI6ICdQMjBZLS1QMjVZJyBmcm9tICJJU08tODYwMS1EZXJpdmVkIFBlcmlvZHMiIGRpc3BsYXkgJzIwLTI0IHllYXInCmNvZGUgIlAyNVktLVAzMFkiOiAnUDI1WS0tUDMwWScgZnJvbSAiSVNPLTg2MDEtRGVyaXZlZCBQZXJpb2RzIiBkaXNwbGF5ICcyNS0yOSB5ZWFyJwpjb2RlICJQMzBZLS1QMzVZIjogJ1AzMFktLVAzNVknIGZyb20gIklTTy04NjAxLURlcml2ZWQgUGVyaW9kcyIgZGlzcGxheSAnMzAtMzQgeWVhcicKY29kZSAiUDM1WS0tUDQwWSI6ICdQMzVZLS1QNDBZJyBmcm9tICJJU08tODYwMS1EZXJpdmVkIFBlcmlvZHMiIGRpc3BsYXkgJzM1LTM5IHllYXInCmNvZGUgIlA0MFktLVA1MFkiOiAnUDQwWS0tUDUwWScgZnJvbSAiSVNPLTg2MDEtRGVyaXZlZCBQZXJpb2RzIiBkaXNwbGF5ICc0MC00OSB5ZWFyJwpjb2RlICJQNTBZLS1QOTk5OVkiOiAnUDUwWS0tUDk5OTlZJyBmcm9tICJJU08tODYwMS1EZXJpdmVkIFBlcmlvZHMiIGRpc3BsYXkgJzUwKyB5ZWFycycKCgpwYXJhbWV0ZXIgIk1lYXN1cmVtZW50IFBlcmlvZCIgSW50ZXJ2YWw8RGF0ZVRpbWU+CgovKgpQZXJjZW50YWdlIG9mIEFSVCBwYXRpZW50cyB3aXRoIGEgc3VwcHJlc3NlZCB2aXJhbCBsb2FkIChWTCkgcmVzdWx0ICg8MTAwMCBjb3BpZXMvbWwpCmRvY3VtZW50ZWQgaW4gdGhlIG1lZGljYWwgb3IgbGFib3JhdG9yeSByZWNvcmRzL2xhYm9yYXRvcnkgaW5mb3JtYXRpb24gc3lzdGVtcyAoTElTKSB3aXRoaW4gdGhlIHBhc3QgMTIgbW9udGhzCiAqLwoKY29udGV4dCBQYXRpZW50Ci8qIFBhdGllbnQgaGFzIHRvIGJlIEhJVisgKi8KZGVmaW5lICJISVYgVGVzdCBPYnNlcnZhdGlvbiI6CiAgKAogICAgW09ic2VydmF0aW9uOiAiSHVtYW4gSW1tdW5vZGVmaWNpZW5jeSBWaXJ1cyAoSElWKSBMYWJvcmF0b3J5IFRlc3QgQ29kZXMgKEFiIGFuZCBBZykiXQogICAgICB1bmlvbiBbT2JzZXJ2YXRpb246ICJISVYgMSBhbmQgMiB0ZXN0cyAtIE1lYW5pbmdmdWwgVXNlIHNldCJdCiAgKSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7J2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJ30KICAgICAgYW5kIE8udmFsdWUgaXMgbm90IG51bGwKCgpkZWZpbmUgIkhJViBQb3NpdGl2ZSBPYnNlcnZhdGlvbiI6CiAgICAiSElWIFRlc3QgT2JzZXJ2YXRpb24iIE8gd2hlcmUgTy52YWx1ZSB+ICJISVYgUG9zaXRpdmUiCgpkZWZpbmUgIklzIEhJViBQb3NpdGl2ZSI6CiAgZXhpc3RzICgiSElWIFBvc2l0aXZlIE9ic2VydmF0aW9uIikKCgovKiBDaGVjayBpZiBwYXRpZW50IGlzIG9uIEFSVCB3aXRoaW4gdGhlIHJlcG9ydGluZyBwZXJpb2QgZm9yIGF0IGxlYXN0IDMgbW9udGhzIGJlZm9yZSBlbmQgb2YgbWVhc3VyaW5nIHBlcmlvZCovCgpkZWZpbmUgIkFSVCBPYnNlcnZhdGlvbiI6CiAgTGFzdCgoIFtPYnNlcnZhdGlvbjogIlZpcmFsIExvYWQgUXVhbnRpdGF0aXZlIl0KICAgICAgICB1bmlvbiBbT2JzZXJ2YXRpb246ICJWaXJhbCBMb2FkIFF1YWxpdGF0aXZlIl0gKSBPCiAgICAgICAgd2hlcmUgTy5zdGF0dXMgaW4geydmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCd9CiAgICAgICAgYW5kIE8uZWZmZWN0aXZlIGluIGRheSBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIgogICAgICAgICAgc29ydCBieSBlZmZlY3RpdmUpCgpkZWZpbmUgIkFSVCBMYXN0IFRocmVlIE1vbnRocyI6CiAgICAgW09ic2VydmF0aW9uOiAiQWxyZWFkeSBvbiBBUlQgYW5kIE5ldyBvbiBBUlQiXSBBIHdoZXJlIEEuZWZmZWN0aXZlIHN0YXJ0cyAzIG1vbnRocyBvciBtb3JlIGJlZm9yZSBlbmQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCIKCmRlZmluZSAiSElWKyBXaXRoIEF0IExlYXN0IDMgTW9udGhzIEFSVCI6CiAgIklzIEhJViBQb3NpdGl2ZSIgYW5kIGV4aXN0cygiQVJUIExhc3QgVGhyZWUgTW9udGhzIikKCgpkZWZpbmUgIkluaXRpYWwgUG9wdWxhdGlvbiI6CiAgIkhJVisgV2l0aCBBdCBMZWFzdCAzIE1vbnRocyBBUlQiCgoKZGVmaW5lICJOdW1lcmF0b3IiOgogICJWaXJhbCBMb2FkIFN1cHByZXNlZCIKCmRlZmluZSAiVmlyYWwgTG9hZCBTdXBwcmVzZWQiOgogICAgICAgIkFSVCBMYXN0IFRocmVlIE1vbnRocyIgViB3aGVyZSAoVi52YWx1ZSBhcyBRdWFudGl0eSkgIDw9IDEwMDAKCgpkZWZpbmUgIkRlbm9taW5hdG9yIjoKICAgICJJbml0aWFsIFBvcHVsYXRpb24iCgoKLy8gQWdlIEdyb3VwCmRlZmluZSAiQWdlIEdyb3VwIjoKICBjYXNlCiAgICB3aGVuIEFnZUluWWVhcnNBdChzdGFydCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIikgaW4gSW50ZXJ2YWxbMCwgMSkgdGhlbiAiUDBZLS1QMVkiCiAgICB3aGVuIEFnZUluWWVhcnNBdChzdGFydCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIikgaW4gSW50ZXJ2YWxbMSwgNSkgdGhlbiAiUDFZLS1QNVkiCiAgICB3aGVuIEFnZUluWWVhcnNBdChzdGFydCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIikgaW4gSW50ZXJ2YWxbNSwgMTApIHRoZW4gIlA1WS0tUDEwWSIKICAgIHdoZW4gQWdlSW5ZZWFyc0F0KHN0YXJ0IG9mICJNZWFzdXJlbWVudCBQZXJpb2QiKSBpbiBJbnRlcnZhbFsxMCwgMTUpIHRoZW4gIlAxMFktLVAxNVkiCiAgICB3aGVuIEFnZUluWWVhcnNBdChzdGFydCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIikgaW4gSW50ZXJ2YWxbMTUsIDIwKSB0aGVuICJQMTVZLS1QMjBZIgogICAgd2hlbiBBZ2VJblllYXJzQXQoc3RhcnQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCIpIGluIEludGVydmFsWzIwLCAyNSkgdGhlbiAiUDIwWS0tUDI1WSIKICAgIHdoZW4gQWdlSW5ZZWFyc0F0KHN0YXJ0IG9mICJNZWFzdXJlbWVudCBQZXJpb2QiKSBpbiBJbnRlcnZhbFsyNSwgMzApIHRoZW4gIlAyNVktLVAzMFkiCiAgICB3aGVuIEFnZUluWWVhcnNBdChzdGFydCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIikgaW4gSW50ZXJ2YWxbMzAsIDM1KSB0aGVuICJQMzBZLS1QMzVZIgogICAgd2hlbiBBZ2VJblllYXJzQXQoc3RhcnQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCIpIGluIEludGVydmFsWzM1LCA0MCkgdGhlbiAiUDM1WS0tUDQwWSIKICAgIHdoZW4gQWdlSW5ZZWFyc0F0KHN0YXJ0IG9mICJNZWFzdXJlbWVudCBQZXJpb2QiKSBpbiBJbnRlcnZhbFs0MCwgNTApIHRoZW4gIlA0MFktLVA1MFkiCiAgICB3aGVuIEFnZUluWWVhcnNBdChzdGFydCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIikgaW4gSW50ZXJ2YWxbNTAsIG51bGxdIHRoZW4gIlA1MFktLVA5OTk5WSIKICAgIGVsc2UgbnVsbAogIGVuZAoKLy8gU2V4CmRlZmluZSAiU2V4IjogUGF0aWVudC5nZW5kZXIKCi8vIEFnZSBHcm91cC9TZXgKZGVmaW5lICJBZ2UgR3JvdXAvU2V4IjogIkFnZSBHcm91cCIuY29kZSArICc6JyArICJTZXgi"
    } ]
  }
